<!DOCTYPE html>
<html lang="en">
    <head>
        <meta charset="UTF-8">
        <meta name="viewport" content="width=device-width, initial-scale=1.0">
        <title>BVRSRS</title>
        <link rel="stylesheet" href="https://fonts.googleapis.com/css2?family=Poppins:wght@100;200;300;400;500;600;700;800&display=swap">
        <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0-beta3/css/all.min.css" crossorigin="anonymous">
        <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.5.0/font/bootstrap-icons.css">
        <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
        <script src="https://cdn.jsdelivr.net/npm/chartjs-plugin-datalabels"></script>
        <link rel="stylesheet" href="/style.css">
        <link rel="icon" href="/images/logo.png">
        <style>
            .fnav {
                color: white;
                max-width: 100%;
            }
            form {
                width: 30%;
                padding-inline: 50px;
                border-radius: 24px;
            }
            .fnav:hover {
                transform: scale(1);
                background-color: var(--witch);
                color: white;
                opacity: 0.80;
            }
            .homePhoto {
                height: 200px;
                width: 200px;
            }
            .homeSec2 {
                padding-left: 30px;
                justify-content: center;
                align-items: center;
            }
            .homeSec2 p {
                text-align: center !important;
            }

            @media (max-width: 768px) {
                form {
                    display: block;
                    height: auto;
                    gap: 0;
                    width: 80%;
                }
                .homePhoto {
                    height: 20vw;
                    width: 20vw;
                }
                .homeSec2 {
                    border-left: 0;
                    padding-left: 0;
                }
                .homeSec {
                    padding: 0;
                    gap: 0;
                }
                .fnav {
                    font-size: 12px;
                }
                body {
                    padding: 0;
                }
                .p10 {
                    font-size: 10px;
                }
                p.title {
                    font-size: 12px;
                }
            }

            @media (max-width: 1024px) {
                .homePhoto {
                    height: 160px;
                    width: 160px;
                }
            }
        </style>
    </head>
<body class="abstractBG">
    <div class="watermark1 absolute bottom50 right50 borderRadius500 h200 w200 padding30" style="transform: scale(3); opacity: 0.04; filter: blur(0.5px) brightness(01) grayscale(0.8); background-color: rgba(255, 255, 255, 0.641);"><img src="/images/logo.jpg" class="borderRadius500" alt=""></div>

    <form action="/forgotX" method="POST" class="gap20" style="flex-direction: row;">
        <a href="/" class="p14 str500" style="position: absolute; right: 20px; top: 20px; height: auto; width: auto;">
            <i class="fas fa-times"></i>
        </a>
        <div class="gap15 col textCenter">
        <div class="h95 w98 relative borderRadius500 borderGray">
            <i class="fas fa-lock size60 green h65 w65 absolute right10 bottom10"  style="transform: rotate(-10deg);"></i>
            <i class="fas fa-key size28 yellow h35 w35 absolute left20 bottom5" style="transform: rotate(-10deg);"></i>
            <i class="fas fa-star size22 yellow h25 w25 absolute left5 bottom25" style="transform: rotate(-15deg);"></i>
        </div>
            <p class="size36 str500 green">Forgot Password</p>
            <div class="height0 gap0 col">
                <p class="size14">
                    <% if (error) { %>
                        <br><p style="color: red;"><%= error %></p>
                    <% } %>
                </p>
            </div>
            <div class="col gap10">
                <div class="col alignStart" style="gap: 2px;">
                    <label for="">Username</label>
                    <input type="username" placeholder="e.g. jyne.santiago1395" name="username" required>
                </div>
            </div>
            <div class="col gap10">
                <div class="col alignStart" style="gap: 2px;">
                    <label for="">Email (Optional)</label>
                    <input type="email" placeholder="e.g. resident@gmail.com" name="email">
                </div>
            </div>
            <div class="height0 col padding15 borderRadius10 borderPrimary">
                <p class="size14">This can't be undone!</p>
                <p class="size14">You will received a temporary password</p>
            </div>
            <button type="submit" class="nav abstractBG fnav">SUBMIT</button>
        </div>
    </form>
            
    <script>
        const showHideButtons = document.querySelectorAll('.showPass');
        
        showHideButtons.forEach(button => {
            button.addEventListener('click', function() {
                const passwordInput = button.previousElementSibling;

                if (passwordInput.type === 'password') {
                    passwordInput.type = 'text';
                    button.textContent = 'hide';
                } else {
                    passwordInput.type = 'password';
                    button.textContent = 'show';
                }
            });
        });
    </script>
    <script>
        function enforceNumericInput(event) {
            event.target.value = event.target.value.replace(/[^0-9]/g, '').slice(0, 11);
        }

        document.addEventListener('DOMContentLoaded', () => {
            const phoneInputs = document.querySelectorAll('.phone');
            phoneInputs.forEach(input => {
                input.addEventListener('input', enforceNumericInput);
            });
        });
    </script>
    <script>
        document.addEventListener("DOMContentLoaded", function() {
            const dirTable = document.getElementById("dirTable");
            const paginationContainer = document.getElementById("pagination");
            const rowsPerPageSelect = document.getElementById("rowsPerPage");
            const totalRecordsLabel = document.getElementById("totalRecords");
            const searchInput = document.getElementById("univ");
            
            let currentPage = 1;
            let rowsPerPage = 15;
            let allRows = Array.from(dirTable.getElementsByTagName("tbody")[0].rows);
            let filteredRows = allRows;

            function renderTable() {
                const start = (currentPage - 1) * rowsPerPage;
                const end = start + rowsPerPage;
  
                for (let row of allRows) {
                    row.style.display = "none";
                }
        
                for (let i = start; i < end && i < filteredRows.length; i++) {
                    filteredRows[i].style.display = "";
                }
        
                totalRecordsLabel.innerText = `Total Records: ${filteredRows.length}`;
                renderPagination(filteredRows.length);
            }
        
            function renderPagination(totalRows) {
                paginationContainer.innerHTML = "";
        
                if (searchInput.value) {
                    return;
                }
        
                const totalPages = Math.ceil(totalRows / rowsPerPage);
        
                const prevButton = document.createElement("button");
                prevButton.innerHTML = "« Previous";
                prevButton.disabled = currentPage === 1;
                prevButton.onclick = () => {
                    currentPage--;
                    renderTable();
                };
                paginationContainer.appendChild(prevButton);
        
                for (let i = 1; i <= totalPages; i++) {
                    const pageButton = document.createElement("button");
                    pageButton.innerHTML = i;
                    pageButton.className = (i === currentPage) ? "active" : "";
                    pageButton.onclick = () => {
                        currentPage = i;
                        renderTable();
                    };
                    paginationContainer.appendChild(pageButton);
                }
        
                const nextButton = document.createElement("button");
                nextButton.innerHTML = "Next »";
                nextButton.disabled = currentPage === totalPages;
                nextButton.onclick = () => {
                    currentPage++;
                    renderTable();
                };
                paginationContainer.appendChild(nextButton);
            }
        
            function updateRowsPerPage() {
                rowsPerPage = parseInt(rowsPerPageSelect.value);
                currentPage = 1;
                renderTable();
            }
        
            function searchTable() {
                const query = searchInput.value.toLowerCase();
                filteredRows = allRows.filter(row => {
                    return Array.from(row.cells).some(cell => {
                        return cell.textContent.toLowerCase().includes(query);
                    });
                });
        
                currentPage = 1;
                rowsPerPageSelect.style.display = query ? "none" : "block";
                renderTable();
            }
        
            rowsPerPageSelect.addEventListener("change", updateRowsPerPage);
            searchInput.addEventListener("input", searchTable);
            renderTable();
        });    
    </script>

</body>
</html>